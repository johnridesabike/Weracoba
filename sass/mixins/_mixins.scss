///**
// * Calculates numbers to the mathmatical power (exponent)
// *
// * @since	1.0.0
// * @link https://jeremyhixon.com/golden-ratio-typography-in-sass/
// *
// * @param	int		$number		The number to increase
// * @param int		$exponent	The power to increase the number by
// *
// * @return	int					The new number
// */
@function pow( $number, $exponent ) {
	$value: 1;

	@if $exponent > 0 {

		@for $i from 1 through $exponent {
			$value: $value * $number;
		}
	}

	@return $value;
}
///**
// * Removes units from values for easier modification
// *
// * @since	1.0.0
// * @link https://jeremyhixon.com/golden-ratio-typography-in-sass/
// *
// * @param	int		$number		The number to strip units from
// *
// * @return	int					The number without the unit
// */
@function strip-unit( $number ) {

	@if type-of( $number ) == "number" and not unitless( $number ) {

		@return $number / ( $number * 0 + 1 );
	}

	@return $number;
}
///**
// * Calculates the line height based on multiple parameters
// *
// * @since	1.0.0
// * @link https://jeremyhixon.com/golden-ratio-typography-in-sass/
// *
// * @param	int		$font-size			The font size
// * @param	int		$content-width		The width of the content area
// * @param	int		$ratio				The ratio. Default 1.61803398875 (golden ratio)
// *
// * @return	int						The calculated line height
// */

@function calculate-line-height( $font-size, $content-width, $ratio: 1.61803398875 ) {
	$font-size-num: strip-unit( $font-size );

	@if unit( $font-size ) == "em" {
		$font-size-num: $font-size-num * strip-unit( $font-size-base );
	}
	$content-width: strip-unit( $content-width );

	@return $ratio - ( ( 1 / ( 2 * $ratio ) ) * ( 1 - ( $content-width / ( pow( ( $font-size-num * $ratio ), 2 ) ) ) ) );
}

// Rem output with px fallback
// Only used in _accessibility.scss
@mixin font-size($sizeValue: 1) {
	font-size: ($sizeValue * strip-unit( $font-size-base ) )  * 1px;
	font-size: $sizeValue * 1rem;
}

@mixin clearfix() {
	display: table;
	table-layout: fixed;
	content: "";
}

// Clear after (not all clearfix need this also)
@mixin clearfix-after() {
	clear: both;
}

// Columns
$columns: (
	1: 100%,
	2: 50%,
	3: 33.33%,
	4: 25%,
	5: 20%,
	6: 16.66%,
	7: 14.28%,
	8: 12.5%,
	9: 11.11%
);

$columns-margin: 3.8%;

// Column width with margin
@mixin column-width($numberColumns: 3) {
	width: map-get( $columns, $numberColumns ) - ( ( $columns-margin * ( $numberColumns - 1 ) ) / $numberColumns );
}

///////////////////////////////////////////////////////////////////////////////
// Several basic element styles have been moved to mixins so they can be easily
// imported to the separate style-editor.scss without importing the other
// styles.
///////////////////////////////////////////////////////////////////////////////

@import "content";
@import "elements";
@import "widgets";
